{"version":3,"file":"static/js/346.0ff0d4ac.chunk.js","mappings":"+OAAA,IAAMA,EAAW,8BACXC,EAAU,mCAeT,SAASC,EAAaC,GAC3B,OAAOC,MAAM,GAAD,OACPJ,EADO,kCAC2BC,EAD3B,iCAC2DE,EAD3D,gCAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,wLACvB,GACF,CAEM,SAASC,EAAYC,GAC1B,OAAOT,MAAM,GAAD,OAAIJ,EAAJ,mBAAuBa,EAAvB,oBAAqCZ,IAAWI,MAAK,SAAAC,GAC/D,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,8XAIH,GACF,CAEM,SAASG,EAAUD,GACxB,OAAOT,MAAM,GAAD,OACPJ,EADO,mBACYa,EADZ,4BACkCZ,EADlC,oBAEVI,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,sMACvB,GACF,CAEM,SAASI,EAAaF,GAC3B,OAAOT,MAAM,GAAD,OACPJ,EADO,mBACYa,EADZ,4BACkCZ,EADlC,2BAEVI,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,wNAEH,GACF,CAhDD,KAXA,WACE,OAAOP,MAAM,GAAD,OAAIJ,EAAJ,sCAA0CC,IAAWI,MAC/D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,SACvB,GAEJ,C,sICXD,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA0F,2BAA1F,EAA4H,0BAA5H,EAAkK,+B,SCgDlK,EA1CoB,WAClB,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQT,GAAOU,EAAAA,EAAAA,MAAPV,GAmBR,OAjBAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBL,GAAW,GACXE,EAAS,MAHQ,UAKEP,EAAAA,EAAAA,IAAaF,GALf,OAKXa,EALW,OAMjBR,EAAWQ,EAAKC,SANC,gDAQjBL,EAAS,EAAD,IARS,yBAUjBF,GAAW,GAVM,4EAAH,qDAalBK,GACD,GAAE,CAACZ,KAGF,2BACGM,IAAW,wJACXF,EAAQW,QACP,eAAIC,UAAWC,EAAf,SACGb,EAAQc,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAaJ,UAAWC,EAAxB,WACE,eAAID,UAAWC,EAAf,SAAyBE,KACzB,cAAGH,UAAWC,EAAd,SAAuBG,MAFhBpB,EADE,OAOb,cAAGgB,UAAWC,EAAd,kOACHT,IAAS,uBAAIA,EAAMa,YAGzB,C","sources":["api/searchMovie.jsx","webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '6cfef64e07855702e198aec946e650ef';\n\nfunction trendingMovies() {\n  return fetch(`${BASE_URL}3/trending/all/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Sorry`));\n    }\n  );\n}\n\nexport default trendingMovies;\n\nexport function searchMovies(query) {\n  return fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`По вашому запиту нiчого не знайдено`));\n  });\n}\n\nexport function singleMovie(id) {\n  return fetch(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(\n        `Iнформацiя про даний фiльм вiдсутня, вибачте! Повернiться на головну сторiнку.`\n      )\n    );\n  });\n}\n\nexport function castMovie(id) {\n  return fetch(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Вибачте, але актерский склад вiдсутнiй.`));\n  });\n}\n\nexport function reviewsMovie(id) {\n  return fetch(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`Вибачте, але поки що нема жодного відгука.`)\n    );\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ReviewsPage_list__IK83Q\",\"item\":\"ReviewsPage_item__AK+Jx\",\"title\":\"ReviewsPage_title__Sqv6J\",\"text\":\"ReviewsPage_text__JDMhb\",\"noReviews\":\"ReviewsPage_noReviews__7-All\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { reviewsMovie } from 'api/searchMovie';\n\nimport s from './ReviewsPage.module.css';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const data = await reviewsMovie(id);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <div>\n      {loading && <p>Завантаження відгуків...</p>}\n      {reviews.length ?(\n        <ul className={s.list}>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id} className={s.item}>\n              <h3 className={s.title}>{author}</h3>\n              <p className={s.text}>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : <p className={s.noReviews}>Вибачте, але поки що нема жодного відгука.</p>}\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["BASE_URL","API_KEY","searchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","singleMovie","id","castMovie","reviewsMovie","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","useEffect","fetchReviews","data","results","length","className","s","map","author","content","message"],"sourceRoot":""}
{"version":3,"file":"static/js/180.7169227c.chunk.js","mappings":"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","sources":["api/searchMovie.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchMoviesForm/SearchMoviesForm.module.css?fcd5","components/SearchMoviesForm/SearchMoviesForm.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '6cfef64e07855702e198aec946e650ef';\n\nfunction trendingMovies() {\n  return fetch(`${BASE_URL}3/trending/all/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Sorry`));\n    }\n  );\n}\n\nexport default trendingMovies;\n\nexport function searchMovies(query) {\n  return fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`По вашому запиту нiчого не знайдено`));\n  });\n}\n\nexport function singleMovie(id) {\n  return fetch(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(\n        `Iнформацiя про даний фiльм вiдсутня, вибачте! Повернiться на головну сторiнку.`\n      )\n    );\n  });\n}\n\nexport function castMovie(id) {\n  return fetch(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Вибачте, але актерский склад вiдсутнiй.`));\n  });\n}\n\nexport function reviewsMovie(id) {\n  return fetch(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`Вибачте, але поки що нема жодного відгука.`)\n    );\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MoviesItem_item__jqTBO\",\"link\":\"MoviesItem_link__Ej0lc\"};","import s from './MoviesItem.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesItem = ({ id, name, title }) => {\n  const location = useLocation();\n\n  return (\n    <li key={id} className={s.item}>\n      <Link state={{ from: location }} className={s.link} to={`/movies/${id}`}>\n        {name} {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MoviesItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchMoviesForm_searchForm__JW3oI\",\"search\":\"SearchMoviesForm_search__IVNsV\",\"searchBtn\":\"SearchMoviesForm_searchBtn__qqmjz\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Notiflix from 'notiflix';\n\nimport s from './SearchMoviesForm.module.css';\n\nconst SearchMoviesForm = ({onSubmit}) => {\n  const [query, setQuery] = useState('');\n\n  const handelChange = event => {\n    setQuery(event.target.value)\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault()\n\n    if (query.trim() === '') {\n        return Notiflix.Notify.info('Введіть коректну назву');\n      }\n      setQuery('')\n      onSubmit({query})\n  };\n\n\n  return (\n    <>\n      <form className={s.searchForm} onSubmit={handelSubmit}>\n        <input\n            className={s.search}\n          onChange={handelChange}\n          value={query}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n        />\n        <button className={s.searchBtn} type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchMoviesForm;\n\nSearchMoviesForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__PJZqT\"};","import SearchMoviesForm from 'components/SearchMoviesForm/SearchMoviesForm';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovies } from 'api/searchMovie';\n\nimport s from './MoviesPage.module.css'\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams()\n  const q = searchParams.get('query')\n\n  const formSearchHandler = ({query}) => {\n    setSearchParams({query})\n  };\n\n  useEffect(() => {\n    if(q){\n      const fetchMovies = async() => {\n\n        try {\n          setLoading(true)\n          setError(null)\n          const data = await searchMovies(q)\n          setMovies(data.results)\n        } catch (error) {\n          setError(error)\n  \n        }finally{\n          setLoading(false)\n        }\n      }\n    fetchMovies()\n    }\n\n  }, [q])\n\n  return (\n    <>\n      <SearchMoviesForm onSubmit={formSearchHandler} />\n      {loading && <p>Пошук фiльмiв...</p>}\n      {movies && (\n        <ul className={s.list}>\n          {movies.map(({ id, name, title }) => (\n            <MoviesItem id={id} key={id} name={name} title={title} />\n          ))}\n        </ul>\n      )}\n      {error && <p>{error.message}</p>}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["BASE_URL","API_KEY","searchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","singleMovie","id","castMovie","reviewsMovie","name","title","location","useLocation","className","s","state","from","to","onSubmit","useState","setQuery","event","preventDefault","trim","Notiflix","onChange","target","value","type","autoComplete","autoFocus","placeholder","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","q","get","useEffect","fetchMovies","data","results","map","MoviesItem","message"],"sourceRoot":""}
{"version":3,"file":"static/js/591.7acbbc88.chunk.js","mappings":"+OAAA,IAAMA,EAAW,8BACXC,EAAU,mCAeT,SAASC,EAAaC,GAC3B,OAAOC,MAAM,GAAD,OACPJ,EADO,kCAC2BC,EAD3B,iCAC2DE,EAD3D,gCAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,wLACvB,GACF,CAEM,SAASC,EAAYC,GAC1B,OAAOT,MAAM,GAAD,OAAIJ,EAAJ,mBAAuBa,EAAvB,oBAAqCZ,IAAWI,MAAK,SAAAC,GAC/D,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,8XAIH,GACF,CAEM,SAASG,EAAUD,GACxB,OAAOT,MAAM,GAAD,OACPJ,EADO,mBACYa,EADZ,4BACkCZ,EADlC,oBAEVI,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,sMACvB,GACF,CAEM,SAASI,EAAaF,GAC3B,OAAOT,MAAM,GAAD,OACPJ,EADO,mBACYa,EADZ,4BACkCZ,EADlC,2BAEVI,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,wNAEH,GACF,CAhDD,KAXA,WACE,OAAOP,MAAM,GAAD,OAAIJ,EAAJ,sCAA0CC,IAAWI,MAC/D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,SACvB,GAEJ,C,6HCXD,EAAuB,uBAAvB,EAAqD,uBAArD,EAAoF,wBAApF,EAAmH,uBAAnH,EAAsJ,4BAAtJ,EAAyL,uB,kBC0DzL,EApDiB,WACf,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQT,GAAOU,EAAAA,EAAAA,MAAPV,IAERW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdL,GAAW,GACXE,EAAS,MAHK,UAKKR,EAAAA,EAAAA,IAAUD,GALf,OAKRa,EALQ,OAMdR,EAAQQ,EAAKT,MANC,gDAQdK,EAAS,EAAD,IARM,yBAUdF,GAAW,GAVG,4EAAH,qDAcfK,GACD,GAAE,CAACZ,IAEJ,IAAMc,EAAWV,EAAKW,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACxB,gBAAaC,UAAWC,EAAxB,UACGF,GACC,gBACEC,UAAWC,EACXC,IAAG,6CAAwCH,GAC3CI,IAAKN,EACLO,MAAO,OAGT,cAAGJ,UAAWC,EAAd,6HAGF,cAAGD,UAAWC,EAAd,SAAuBJ,KACvB,eAAGG,UAAWC,EAAd,wBAAuCH,OAbhCjB,EADe,IAkB1B,OACE,2BACGM,IAAW,yMACXF,IAAQ,eAAIe,UAAWC,EAAf,SAAwBN,IAChCN,IAAS,uBAAIA,EAAMgB,YAGzB,C","sources":["api/searchMovie.jsx","webpack://goit-react-hw-05-movies/./src/pages/CastPage/CastPage.module.css?d5ae","pages/CastPage/CastPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '6cfef64e07855702e198aec946e650ef';\n\nfunction trendingMovies() {\n  return fetch(`${BASE_URL}3/trending/all/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Sorry`));\n    }\n  );\n}\n\nexport default trendingMovies;\n\nexport function searchMovies(query) {\n  return fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`По вашому запиту нiчого не знайдено`));\n  });\n}\n\nexport function singleMovie(id) {\n  return fetch(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(\n        `Iнформацiя про даний фiльм вiдсутня, вибачте! Повернiться на головну сторiнку.`\n      )\n    );\n  });\n}\n\nexport function castMovie(id) {\n  return fetch(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Вибачте, але актерский склад вiдсутнiй.`));\n  });\n}\n\nexport function reviewsMovie(id) {\n  return fetch(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`Вибачте, але поки що нема жодного відгука.`)\n    );\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastPage_list__ievSZ\",\"item\":\"CastPage_item__ycgBh\",\"photo\":\"CastPage_photo__hg2k2\",\"name\":\"CastPage_name__h9vn+\",\"character\":\"CastPage_character__5rPGR\",\"desc\":\"CastPage_desc__VQJdI\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport s from './CastPage.module.css';\n\nimport { castMovie } from 'api/searchMovie';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const data = await castMovie(id);\n        setCast(data.cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.map(({ id, name, character, profile_path }) => (\n    <li key={id} className={s.item}>\n      {profile_path ? (\n        <img\n          className={s.photo}\n          src={`https://image.tmdb.org/t/p/original${profile_path}`}\n          alt={name}\n          width={180}\n        />\n      ) : (\n        <p className={s.desc}>Нажаль фото відсутнє</p>\n      )}\n\n      <p className={s.name}>{name}</p>\n      <p className={s.character}>Character: {character}</p>\n    </li>\n  ));\n\n  return (\n    <div>\n      {loading && <p>Завантаження акторского складу...</p>}\n      {cast && <ul className={s.list}>{elements}</ul>}\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default CastPage;\n"],"names":["BASE_URL","API_KEY","searchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","singleMovie","id","castMovie","reviewsMovie","useState","cast","setCast","loading","setLoading","error","setError","useParams","useEffect","fetchCast","data","elements","map","name","character","profile_path","className","s","src","alt","width","message"],"sourceRoot":""}